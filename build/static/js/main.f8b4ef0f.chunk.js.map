{"version":3,"sources":["logo.svg","ToDoTitle.js","ToDoList.js","ToDoAddForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoTitle","React","Component","ToDoList","handleChange","event","updateTodo","props","todoItems","currentTarget","name","value","console","log","updateTodos","index","toggleCheckbox","checked","className","this","isCompleted","type","onChange","todo","onClick","removeToDoItem","ToDoAddForm","todoRef","createRef","addItemOnList","e","preventDefault","todoItem","current","addToDoItems","reset","id","onSubmit","ref","required","App","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,YCMGA,E,4JAJd,WACA,OAAO,mD,GAFaC,IAAMC,W,OC8CfC,E,4MA3CXC,aAAe,SAAAC,GACX,IAAMC,EAAU,2BACb,EAAKC,MAAMC,WADE,kBAEfH,EAAMI,cAAcC,KAAOL,EAAMI,cAAcE,QAEhDC,QAAQC,IAAIR,EAAMI,cAAcE,OAChC,EAAKJ,MAAMO,YAAY,EAAKP,MAAMQ,MAAOT,I,EAG7CU,eAAiB,SAAAX,GACb,IAAMC,EAAU,2BACb,EAAKC,MAAMC,WADE,kBAEfH,EAAMI,cAAcC,KAAOL,EAAMI,cAAcQ,UAEhD,EAAKV,MAAMO,YAAY,EAAKP,MAAMQ,MAAOT,I,4CAG7C,WAAU,IAAD,OACL,OACI,qBAAIY,UAAWC,KAAKZ,MAAMC,UAAUY,YAAc,OAAS,KAA3D,UACA,uBACIC,KAAK,WACLX,KAAK,cACLO,QAASE,KAAKZ,MAAMC,UAAUY,YAC9BE,SAAUH,KAAKH,iBAGnB,uBACIK,KAAK,OACLX,KAAK,OACLC,MAAOQ,KAAKZ,MAAMC,UAAUe,KAC5BD,SAAUH,KAAKf,eAGnB,wBACIc,UAAU,UACVM,QAAS,kBAAM,EAAKjB,MAAMkB,eAAe,EAAKlB,MAAMQ,QAFxD,uB,GAnCWd,IAAMC,WCqBdwB,E,4MAtBXC,QAAU1B,IAAM2B,Y,EAEhBC,cAAgB,SAAAC,GACZA,EAAEC,iBACF,IAAMC,EAAW,CACbT,KAAM,EAAKI,QAAQM,QAAQtB,MAC3BS,aAAa,GAEjB,EAAKb,MAAM2B,aAAaF,GACxBF,EAAErB,cAAc0B,S,4CAGpB,WACI,OACI,uBAAMC,GAAG,gBAAgBC,SAAUlB,KAAKU,cAAxC,UACA,uBAAOR,KAAK,OAAOX,KAAK,aAAa4B,IAAKnB,KAAKQ,QAASY,UAAQ,IAChE,gD,GAjBctC,IAAMC,WCqDjBsC,E,4MA9CbC,MAAQ,CACNjC,UAAW,I,EAGb0B,aAAe,SAAAQ,GACb,IAAMC,EAAK,eAAQ,EAAKF,MAAMjC,WAC9BI,QAAQC,IAAI8B,GACZA,EAAM,OAAD,OAAQC,KAAKC,QAAWH,EAC7B,EAAKI,SAAS,CACZtC,UAAWmC,K,EAIflB,eAAiB,SAAAiB,GACf,IAAMK,EAAK,eAAQ,EAAKN,MAAMjC,kBACvBuC,EAAML,GACb,EAAKI,SAAS,CAAEtC,UAAWuC,K,EAG7BjC,YAAc,SAACkC,EAAKC,GAClB,IAAMF,EAAK,eAAQ,EAAKN,MAAMjC,WAC9BuC,EAAMC,GAAOC,EACb,EAAKH,SAAS,CAAEtC,UAAWuC,K,4CAG7B,WAAU,IAAD,OACP,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAagB,aAAcf,KAAKe,eAChC,6BACGgB,OAAOC,KAAKhC,KAAKsB,MAAMjC,WAAW4C,KAAI,SAAAJ,GAAG,OACxC,cAAC,EAAD,CAEEjC,MAAOiC,EACPxC,UAAW,EAAKiC,MAAMjC,UAAUwC,GAChCvB,eAAgB,EAAKA,eACrBX,YAAa,EAAKA,aAJbkC,e,GAlCD9C,aCKHmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8b4ef0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nclass ToDoTitle extends React.Component { \r\n    render () { \r\n    return <h1>CGU Todo list</h1>; \r\n    } \r\n   }\r\n   export default ToDoTitle;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass ToDoList extends React.Component {\r\n    handleChange = event => {\r\n        const updateTodo = {\r\n        ...this.props.todoItems,\r\n        [event.currentTarget.name]: event.currentTarget.value\r\n        };\r\n        console.log(event.currentTarget.value);\r\n        this.props.updateTodos(this.props.index, updateTodo);\r\n    };\r\n  \r\n    toggleCheckbox = event => {\r\n        const updateTodo = {\r\n        ...this.props.todoItems,\r\n        [event.currentTarget.name]: event.currentTarget.checked\r\n        };\r\n        this.props.updateTodos(this.props.index, updateTodo);\r\n    };\r\n  \r\n    render() {\r\n        return (\r\n            <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\r\n            <input\r\n                type=\"checkbox\"\r\n                name=\"isCompleted\"\r\n                checked={this.props.todoItems.isCompleted}\r\n                onChange={this.toggleCheckbox}\r\n                // checked={this.props.todoItems.isChecked}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"todo\"\r\n                value={this.props.todoItems.todo}\r\n                onChange={this.handleChange}\r\n            />\r\n            {/* <button>Edit</button> */}\r\n            <button\r\n                className=\"del-btn\"\r\n                onClick={() => this.props.removeToDoItem(this.props.index)}\r\n            > X</button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nclass ToDoAddForm extends React.Component {\r\n    todoRef = React.createRef();\r\n\r\n    addItemOnList = e => {\r\n        e.preventDefault();\r\n        const todoItem = {\r\n            todo: this.todoRef.current.value,\r\n            isCompleted: false\r\n        };\r\n        this.props.addToDoItems(todoItem);\r\n        e.currentTarget.reset();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\r\n            <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\r\n            <button>Add</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoAddForm;","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport ToDoTitle from './ToDoTitle';\nimport ToDoList from './ToDoList';\nimport ToDoAddForm from './ToDoAddForm';\n\nclass App extends Component {\n  state = {\n    todoItems: {}\n  };\n\n  addToDoItems = item => {\n    const items = { ...this.state.todoItems };\n    console.log(items);\n    items[`item${Date.now()}`] = item;\n    this.setState({\n      todoItems: items\n    });\n  };\n\n  removeToDoItem = item => {\n    const todos = { ...this.state.todoItems };\n    delete todos[item];\n    this.setState({ todoItems: todos });\n  };\n\n  updateTodos = (key, updatedTodo) => {\n    const todos = { ...this.state.todoItems };\n    todos[key] = updatedTodo;\n    this.setState({ todoItems: todos });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ToDoTitle/>\n        <ToDoAddForm addToDoItems={this.addToDoItems} />\n        <ul>\n          {Object.keys(this.state.todoItems).map(key => (\n            <ToDoList\n              key={key}\n              index={key}\n              todoItems={this.state.todoItems[key]}\n              removeToDoItem={this.removeToDoItem}\n              updateTodos={this.updateTodos}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()"],"sourceRoot":""}